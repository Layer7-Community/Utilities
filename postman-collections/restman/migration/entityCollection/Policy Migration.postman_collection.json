{
	"info": {
		"_postman_id": "2c91428d-3fd8-4f5c-afca-8bd9c9d79b22",
		"name": "Policy Migration",
		"description": "**Pre-requisites**\n\n1.  Make sure to select GATEWAY-ENVIRONMENT-VARIABLES before running any request and fill in the below information\n    \n\n| Variable | Type | Description | **User Input** |\n| --- | --- | --- | --- |\n| gw_src_host | string | Hostname or IP address of the Source Gateway | Mandatory to provide by user |\n| gw_src_user | string | Source Gateway Username | Mandatory to provide by user |\n| gw_src_password | string | Source Gateway Password | Mandatory to provide by user |\n| gw_dst_host | string | Hostname or IP address of the Source Gateway | Mandatory to provide by user |\n| gw_dst_user | string | Destination Gateway Username | Mandatory to provide by user |\n| gw_dst_password | string | Destination Gateway Password | Mandatory to provide by user |\n\n### Policy Alias\n\nA policy alias allows a policy to appear in more than one folder in the Services and Policies list. The policy alias is a linked copy of the original policy.\n\nIt is mandatory to provide \"policyNameToMigrate\" in the variables Section of this Collection. Also it is mandatory to run the entire collection with below 3 API's i;e Run the entire collection to migrate single policy. The Policy with all it's dependencies will get migrated\n\nExport Policy By Name\n\nExport Policy\n\nImport Policy\n\n**Collection Variables**\n\n| Variable | Type | Description | **User Input** |\n| --- | --- | --- | --- |\n| policyNameToMigrate | string | The Name of the Policy to return | Mandatory to provide incase for Policy migration. |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6652005"
	},
	"item": [
		{
			"name": "Export Policy By Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var ENTITY=\"PolicyDetail\";\r",
							"var XML_NS = \"xmlns:l7=\\\"http://ns.l7tech.com/2010/04/gateway-management\\\"\";\r",
							"var ADDITIONAL_NODE = \"\";\r",
							"var reqNodes = responseBody.substr(responseBody.indexOf('<l7:'+ENTITY+''));\r",
							"\r",
							"//console.log(\"response  is : \"+reqNodes);\r",
							"\r",
							"var refinedResponse = JSON.stringify(reqNodes).replaceAll(\"<l7:Resource>\", \"\").replaceAll(\"</l7:Resource>\", \"\").replaceAll(\"<l7:Item>\", \"\").replaceAll(\"</l7:Item>\", \"\").replaceAll(\"<l7:List>\", \"\").replaceAll(\"</l7:List>\", \"\").replaceAll(\"\\\\n\", \"\").replaceAll(\"\\\\\", \"\");\r",
							"\r",
							"//console.log(\"refinedResponse  is : \"+refinedResponse);\r",
							"var finalXmlEntity = refinedResponse.substr(1, refinedResponse.length-14);\r",
							"\r",
							"//console.log(\"finalXmlEntity  is : \"+finalXmlEntity);\r",
							"\r",
							"//console.log(xml2Json(finalXmlEntity));\r",
							"var policyId  =xml2Json(finalXmlEntity)['l7:'+ENTITY+'']['$']['id']\r",
							"\r",
							"//console.log(\"Folder Id is : \"+policyId);\r",
							"\r",
							"pm.collectionVariables.set('policyId', policyId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{gw_src_admin}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{gw_src_password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "L7-key-passphrase",
						"value": "N2xheWVy",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{gw_src_host}}:{{gw_src_port}}/restman/1.0/policies?name={{policyNameToMigrate}}",
					"protocol": "https",
					"host": [
						"{{gw_src_host}}"
					],
					"port": "{{gw_src_port}}",
					"path": [
						"restman",
						"1.0",
						"policies"
					],
					"query": [
						{
							"key": "name",
							"value": "{{policyNameToMigrate}}"
						}
					]
				},
				"description": "Returns a single Policy with all it's dependencies from Source Gateway with the given Name"
			},
			"response": []
		},
		{
			"name": "Export Policy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var policyId = pm.collectionVariables.get('policyId');\r",
							"//console.log(\"policyId is : \"+ policyId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var ENTITY=\"Bundle\";\r",
							"var XML_NS = \"xmlns:l7=\\\"http://ns.l7tech.com/2010/04/gateway-management\\\"\";\r",
							"var ADDITIONAL_NODE = \"\";\r",
							"var response = responseBody.substr(responseBody.indexOf('<l7:Item'));\r",
							"var reqNodes = response.substr(response.indexOf('<l7:'+ENTITY+''));\r",
							"//trim last '</l7:Item>'\r",
							"reqNodes = reqNodes.substr(0, reqNodes.lastIndexOf('</l7:Item>'));\r",
							"//console.log(\"reqNodes   : \"+reqNodes);\r",
							"//trim last '</l7:Resource>'\r",
							"refindedResponse = reqNodes.substr(0, reqNodes.lastIndexOf('</l7:Resource>'));\r",
							"// Add xmlns for import\r",
							"refindedResponse = refindedResponse.replace(\"<l7:\"+ENTITY+\"\", \"<l7:\" + ENTITY +\" \" + XML_NS +\"\");\r",
							"//console.log(\"refindedResponse   : \"+refindedResponse);\r",
							"\r",
							"pm.collectionVariables.set(\"exportPolicyBundleXMLBody\",refindedResponse );\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{gw_src_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gw_src_admin}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "L7-key-passphrase",
						"value": "N2xheWVy",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{gw_src_host}}:{{gw_src_port}}/restman/1.0/bundle?policy={{policyId}}&defaultAction=NewOrUpdate&encryptSecrets=true",
					"protocol": "https",
					"host": [
						"{{gw_src_host}}"
					],
					"port": "{{gw_src_port}}",
					"path": [
						"restman",
						"1.0",
						"bundle"
					],
					"query": [
						{
							"key": "policy",
							"value": "{{policyId}}"
						},
						{
							"key": "defaultAction",
							"value": "NewOrUpdate"
						},
						{
							"key": "encryptSecrets",
							"value": "true"
						}
					]
				},
				"description": "Returns a single Policy with all it's dependencies from Source Gateway with given policyID.\n\nNote: User doesn't need to pass the policyID manually, it will be fetched automatically to this request, when this API \"Export Policy By Name\" get's executed as first request when we run this entire collection"
			},
			"response": []
		},
		{
			"name": "Import Policy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var exportPolicyBundleXMLBody =  pm.collectionVariables.get(\"exportPolicyBundleXMLBody\");\r",
							"\r",
							"//console.log(\"exportPolicyBundleXMLBody  is: \"+exportPolicyBundleXMLBody);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200|201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{gw_dst_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gw_dst_admin}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "L7-key-passphrase",
						"value": "N2xheWVy",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{exportPolicyBundleXMLBody}}"
				},
				"url": {
					"raw": "https://{{gw_dst_host}}:{{gw_dst_port}}/restman/1.0/bundle",
					"protocol": "https",
					"host": [
						"{{gw_dst_host}}"
					],
					"port": "{{gw_dst_port}}",
					"path": [
						"restman",
						"1.0",
						"bundle"
					]
				},
				"description": "Creates or Updates an existing Policy with all it's dependencies into the Target Gateway. If a Policy with the given Name does not exist one will be created, otherwise the existing one will be updated"
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "7layer",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "policyNameToMigrate",
			"value": "policyNameToMigrate",
			"type": "string"
		}
	]
}